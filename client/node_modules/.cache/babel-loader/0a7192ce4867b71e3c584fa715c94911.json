{"ast":null,"code":"var _curry2 = /*#__PURE__*/require(\"./internal/_curry2\");\n\nvar _dispatchable = /*#__PURE__*/require(\"./internal/_dispatchable\");\n\nvar _filter = /*#__PURE__*/require(\"./internal/_filter\");\n\nvar _isObject = /*#__PURE__*/require(\"./internal/_isObject\");\n\nvar _reduce = /*#__PURE__*/require(\"./internal/_reduce\");\n\nvar _xfilter = /*#__PURE__*/require(\"./internal/_xfilter\");\n\nvar keys = /*#__PURE__*/require(\"./keys\");\n/**\r\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\r\n * same type containing the members of the given filterable which satisfy the\r\n * given predicate. Filterable objects include plain objects or any object\r\n * that has a filter method such as `Array`.\r\n *\r\n * Dispatches to the `filter` method of the second argument, if present.\r\n *\r\n * Acts as a transducer if a transformer is given in list position.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category List\r\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\r\n * @param {Function} pred\r\n * @param {Array} filterable\r\n * @return {Array} Filterable\r\n * @see R.reject, R.transduce, R.addIndex\r\n * @example\r\n *\r\n *      const isEven = n => n % 2 === 0;\r\n *\r\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\r\n *\r\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\r\n */\n\n\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n\n    return acc;\n  }, {}, keys(filterable)) : // else\n  _filter(pred, filterable);\n}));\n\nmodule.exports = filter;","map":{"version":3,"sources":["C:/Users/bdgcy/Axis/client/node_modules/ramda/src/filter.js"],"names":["_curry2","require","_dispatchable","_filter","_isObject","_reduce","_xfilter","keys","filter","pred","filterable","acc","key","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GACX,aACAC,OAAO,CAAC,oBAAD,CAFP;;AAIA,IAAIC,aAAa,GACjB,aACAD,OAAO,CAAC,0BAAD,CAFP;;AAIA,IAAIE,OAAO,GACX,aACAF,OAAO,CAAC,oBAAD,CAFP;;AAIA,IAAIG,SAAS,GACb,aACAH,OAAO,CAAC,sBAAD,CAFP;;AAIA,IAAII,OAAO,GACX,aACAJ,OAAO,CAAC,oBAAD,CAFP;;AAIA,IAAIK,QAAQ,GACZ,aACAL,OAAO,CAAC,qBAAD,CAFP;;AAIA,IAAIM,IAAI,GACR,aACAN,OAAO,CAAC,QAAD,CAFP;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIO,MAAM,GACV,aACAR,OAAO,EACP,aACAE,aAAa,CAAC,CAAC,QAAD,CAAD,EAAaI,QAAb,EAAuB,UAAUG,IAAV,EAAgBC,UAAhB,EAA4B;AAC9D,SAAON,SAAS,CAACM,UAAD,CAAT,GAAwBL,OAAO,CAAC,UAAUM,GAAV,EAAeC,GAAf,EAAoB;AACzD,QAAIH,IAAI,CAACC,UAAU,CAACE,GAAD,CAAX,CAAR,EAA2B;AACzBD,MAAAA,GAAG,CAACC,GAAD,CAAH,GAAWF,UAAU,CAACE,GAAD,CAArB;AACD;;AAED,WAAOD,GAAP;AACD,GANqC,EAMnC,EANmC,EAM/BJ,IAAI,CAACG,UAAD,CAN2B,CAA/B,GAMoB;AAC3BP,EAAAA,OAAO,CAACM,IAAD,EAAOC,UAAP,CAPP;AAQD,CATY,CAFN,CAFP;;AAeAG,MAAM,CAACC,OAAP,GAAiBN,MAAjB","sourcesContent":["var _curry2 =\r\n/*#__PURE__*/\r\nrequire(\"./internal/_curry2\");\r\n\r\nvar _dispatchable =\r\n/*#__PURE__*/\r\nrequire(\"./internal/_dispatchable\");\r\n\r\nvar _filter =\r\n/*#__PURE__*/\r\nrequire(\"./internal/_filter\");\r\n\r\nvar _isObject =\r\n/*#__PURE__*/\r\nrequire(\"./internal/_isObject\");\r\n\r\nvar _reduce =\r\n/*#__PURE__*/\r\nrequire(\"./internal/_reduce\");\r\n\r\nvar _xfilter =\r\n/*#__PURE__*/\r\nrequire(\"./internal/_xfilter\");\r\n\r\nvar keys =\r\n/*#__PURE__*/\r\nrequire(\"./keys\");\r\n/**\r\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\r\n * same type containing the members of the given filterable which satisfy the\r\n * given predicate. Filterable objects include plain objects or any object\r\n * that has a filter method such as `Array`.\r\n *\r\n * Dispatches to the `filter` method of the second argument, if present.\r\n *\r\n * Acts as a transducer if a transformer is given in list position.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category List\r\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\r\n * @param {Function} pred\r\n * @param {Array} filterable\r\n * @return {Array} Filterable\r\n * @see R.reject, R.transduce, R.addIndex\r\n * @example\r\n *\r\n *      const isEven = n => n % 2 === 0;\r\n *\r\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\r\n *\r\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\r\n */\r\n\r\n\r\nvar filter =\r\n/*#__PURE__*/\r\n_curry2(\r\n/*#__PURE__*/\r\n_dispatchable(['filter'], _xfilter, function (pred, filterable) {\r\n  return _isObject(filterable) ? _reduce(function (acc, key) {\r\n    if (pred(filterable[key])) {\r\n      acc[key] = filterable[key];\r\n    }\r\n\r\n    return acc;\r\n  }, {}, keys(filterable)) : // else\r\n  _filter(pred, filterable);\r\n}));\r\n\r\nmodule.exports = filter;"]},"metadata":{},"sourceType":"script"}