{"ast":null,"code":"var _arity = /*#__PURE__*/require(\"./_arity\");\n\nvar _isPlaceholder = /*#__PURE__*/require(\"./_isPlaceholder\");\n/**\r\n * Internal curryN function.\r\n *\r\n * @private\r\n * @category Function\r\n * @param {Number} length The arity of the curried function.\r\n * @param {Array} received An array of arguments received thus far.\r\n * @param {Function} fn The function to curry.\r\n * @return {Function} The curried function.\r\n */\n\n\nfunction _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}\n\nmodule.exports = _curryN;","map":{"version":3,"sources":["C:/Users/bdgcy/Axis/client/node_modules/ramda/src/internal/_curryN.js"],"names":["_arity","require","_isPlaceholder","_curryN","length","received","fn","combined","argsIdx","left","combinedIdx","arguments","result","apply","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GACV,aACAC,OAAO,CAAC,UAAD,CAFP;;AAIA,IAAIC,cAAc,GAClB,aACAD,OAAO,CAAC,kBAAD,CAFP;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASE,OAAT,CAAiBC,MAAjB,EAAyBC,QAAzB,EAAmCC,EAAnC,EAAuC;AACrC,SAAO,YAAY;AACjB,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,OAAO,GAAG,CAAd;AACA,QAAIC,IAAI,GAAGL,MAAX;AACA,QAAIM,WAAW,GAAG,CAAlB;;AAEA,WAAOA,WAAW,GAAGL,QAAQ,CAACD,MAAvB,IAAiCI,OAAO,GAAGG,SAAS,CAACP,MAA5D,EAAoE;AAClE,UAAIQ,MAAJ;;AAEA,UAAIF,WAAW,GAAGL,QAAQ,CAACD,MAAvB,KAAkC,CAACF,cAAc,CAACG,QAAQ,CAACK,WAAD,CAAT,CAAf,IAA0CF,OAAO,IAAIG,SAAS,CAACP,MAAjG,CAAJ,EAA8G;AAC5GQ,QAAAA,MAAM,GAAGP,QAAQ,CAACK,WAAD,CAAjB;AACD,OAFD,MAEO;AACLE,QAAAA,MAAM,GAAGD,SAAS,CAACH,OAAD,CAAlB;AACAA,QAAAA,OAAO,IAAI,CAAX;AACD;;AAEDD,MAAAA,QAAQ,CAACG,WAAD,CAAR,GAAwBE,MAAxB;;AAEA,UAAI,CAACV,cAAc,CAACU,MAAD,CAAnB,EAA6B;AAC3BH,QAAAA,IAAI,IAAI,CAAR;AACD;;AAEDC,MAAAA,WAAW,IAAI,CAAf;AACD;;AAED,WAAOD,IAAI,IAAI,CAAR,GAAYH,EAAE,CAACO,KAAH,CAAS,IAAT,EAAeN,QAAf,CAAZ,GAAuCP,MAAM,CAACS,IAAD,EAAON,OAAO,CAACC,MAAD,EAASG,QAAT,EAAmBD,EAAnB,CAAd,CAApD;AACD,GA1BD;AA2BD;;AAEDQ,MAAM,CAACC,OAAP,GAAiBZ,OAAjB","sourcesContent":["var _arity =\r\n/*#__PURE__*/\r\nrequire(\"./_arity\");\r\n\r\nvar _isPlaceholder =\r\n/*#__PURE__*/\r\nrequire(\"./_isPlaceholder\");\r\n/**\r\n * Internal curryN function.\r\n *\r\n * @private\r\n * @category Function\r\n * @param {Number} length The arity of the curried function.\r\n * @param {Array} received An array of arguments received thus far.\r\n * @param {Function} fn The function to curry.\r\n * @return {Function} The curried function.\r\n */\r\n\r\n\r\nfunction _curryN(length, received, fn) {\r\n  return function () {\r\n    var combined = [];\r\n    var argsIdx = 0;\r\n    var left = length;\r\n    var combinedIdx = 0;\r\n\r\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\r\n      var result;\r\n\r\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\r\n        result = received[combinedIdx];\r\n      } else {\r\n        result = arguments[argsIdx];\r\n        argsIdx += 1;\r\n      }\r\n\r\n      combined[combinedIdx] = result;\r\n\r\n      if (!_isPlaceholder(result)) {\r\n        left -= 1;\r\n      }\r\n\r\n      combinedIdx += 1;\r\n    }\r\n\r\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\r\n  };\r\n}\r\n\r\nmodule.exports = _curryN;"]},"metadata":{},"sourceType":"script"}