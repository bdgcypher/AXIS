{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bdgcy\\\\Axis\\\\client\\\\src\\\\components\\\\ResultsDropdown.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Avatar, useChatContext } from 'stream-chat-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst channelByUser = async ({\n  client,\n  setActiveChannel,\n  channel,\n  setChannel\n}) => {\n  const filters = {\n    type: 'messaging',\n    member_count: 2,\n    members: {\n      $eq: [client.user.id, client.userID]\n    }\n  };\n  const [existingChannel] = await client.queryChannels(filters);\n  if (existingChannel) return setActiveChannel(existingChannel);\n  const newChannel = client.channel('messaging', {\n    members: [channel.id, client.userID]\n  });\n  setChannel(newChannel);\n  return setActiveChannel(newChannel);\n};\n\nconst SearchResult = ({\n  channel,\n  focusedId,\n  type,\n  setChannel,\n  setToggleContainer\n}) => {\n  _s();\n\n  const {\n    client,\n    setActiveChannel\n  } = useChatContext();\n\n  if (type === 'channel') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => {\n        setChannel(channel);\n\n        if (setToggleContainer) {\n          setToggleContainer(prevState => !prevState);\n        }\n      },\n      className: focusedId === channel.id ? 'channel-search__result-container__focused' : 'channel-search__result-container',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-hashtag\",\n        children: \"#\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"channel-search__result-text\",\n        children: channel.data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: async () => {\n      channelByUser({\n        client,\n        setActiveChannel,\n        channel,\n        setChannel\n      });\n\n      if (setToggleContainer) {\n        setToggleContainer(prevState => !prevState);\n      }\n    },\n    className: focusedId === channel.id ? 'channel-search__result-container__focused' : 'channel-search__result-container',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channel-search__result-user\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        image: channel.image || undefined,\n        name: channel.name,\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"channel-search__result-text\",\n        children: channel.name || channel.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchResult, \"sU/ZwPyM571p6ERqNXz2PDXwtQc=\", false, function () {\n  return [useChatContext];\n});\n\n_c = SearchResult;\n\nconst ResultsDropdown = ({\n  teamChannels,\n  directChannels,\n  focusedId,\n  loading,\n  setChannel,\n  setToggleContainer\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"channel-search__results\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"channel-search__results-header\",\n      children: \"Channels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), loading && !teamChannels.length && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"channel-search__results-header\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), !loading && !teamChannels.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"channel-search__results-header\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"No channels found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : teamChannels === null || teamChannels === void 0 ? void 0 : teamChannels.map((channel, i) => /*#__PURE__*/_jsxDEV(SearchResult, {\n      channel: channel,\n      focusedId: focusedId,\n      setChannel: setChannel,\n      type: \"channel\",\n      setToggleContainer: setToggleContainer\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"channel-search__results-header\",\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), loading && !directChannels.length && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"channel-search__results-header\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), !loading && !directChannels.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"channel-search__res ults-header\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"No direct messages found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : directChannels === null || directChannels === void 0 ? void 0 : directChannels.map((channel, i) => /*#__PURE__*/_jsxDEV(SearchResult, {\n      channel: channel,\n      focusedId: focusedId,\n      setChannel: setChannel,\n      type: \"user\",\n      setToggleContainer: setToggleContainer\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ResultsDropdown;\nexport default ResultsDropdown;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchResult\");\n$RefreshReg$(_c2, \"ResultsDropdown\");","map":{"version":3,"sources":["C:/Users/bdgcy/Axis/client/src/components/ResultsDropdown.js"],"names":["React","Avatar","useChatContext","channelByUser","client","setActiveChannel","channel","setChannel","filters","type","member_count","members","$eq","user","id","userID","existingChannel","queryChannels","newChannel","SearchResult","focusedId","setToggleContainer","prevState","data","name","image","undefined","ResultsDropdown","teamChannels","directChannels","loading","length","map","i"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Avatar, useChatContext } from 'stream-chat-react';\r\n\r\nconst channelByUser = async ({ client, setActiveChannel, channel, setChannel }) => {\r\n  const filters = {\r\n    type: 'messaging',\r\n    member_count: 2,\r\n    members: { $eq: [client.user.id, client.userID] },\r\n  };\r\n\r\n  const [existingChannel] = await client.queryChannels(filters);\r\n\r\n  if (existingChannel) return setActiveChannel(existingChannel);\r\n\r\n  const newChannel = client.channel('messaging', { members: [channel.id, client.userID] });\r\n  \r\n  setChannel(newChannel)\r\n\r\n  return setActiveChannel(newChannel);\r\n};\r\n\r\nconst SearchResult = ({ channel, focusedId, type, setChannel, setToggleContainer }) => {\r\n  const { client, setActiveChannel } = useChatContext();\r\n\r\n  if (type === 'channel') {\r\n    return (\r\n      <div\r\n        onClick={() => {\r\n          setChannel(channel)\r\n          if(setToggleContainer) {\r\n            setToggleContainer((prevState) => !prevState)   \r\n          }\r\n        }}\r\n        className={focusedId === channel.id ? 'channel-search__result-container__focused' : 'channel-search__result-container' }\r\n      >\r\n        <div className='result-hashtag'>#</div>\r\n        <p className='channel-search__result-text'>{channel.data.name}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={async () => {\r\n        channelByUser({ client, setActiveChannel, channel, setChannel })\r\n        if(setToggleContainer) {\r\n            setToggleContainer((prevState) => !prevState)   \r\n        }\r\n      }}\r\n      className={focusedId === channel.id ? 'channel-search__result-container__focused' : 'channel-search__result-container' }\r\n    >\r\n      <div className='channel-search__result-user'>\r\n        <Avatar image={channel.image || undefined} name={channel.name} size={24} />\r\n        <p className='channel-search__result-text'>{channel.name || channel.id}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ResultsDropdown = ({ teamChannels, directChannels, focusedId, loading, setChannel, setToggleContainer }) => {\r\n\r\n  return (\r\n    <div className='channel-search__results'>\r\n      <p className='channel-search__results-header'>Channels</p>\r\n      {loading && !teamChannels.length && (\r\n        <p className='channel-search__results-header'>\r\n          <i>Loading...</i>\r\n        </p>\r\n      )}\r\n      {!loading && !teamChannels.length ? (\r\n        <p className='channel-search__results-header'>\r\n          <i>No channels found</i>\r\n        </p>\r\n      ) : (\r\n        teamChannels?.map((channel, i) => (\r\n          <SearchResult\r\n            channel={channel}\r\n            focusedId={focusedId}\r\n            key={i}\r\n            setChannel={setChannel}\r\n            type='channel'\r\n            setToggleContainer={setToggleContainer}\r\n          />\r\n        ))\r\n      )}\r\n      <p className='channel-search__results-header'>Users</p>\r\n      {loading && !directChannels.length && (\r\n        <p className='channel-search__results-header'>\r\n          <i>Loading...</i>\r\n        </p>\r\n      )}\r\n      {!loading && !directChannels.length ? (\r\n        <p className='channel-search__res ults-header'>\r\n          <i>No direct messages found</i>\r\n        </p>\r\n      ) : (\r\n        directChannels?.map((channel, i) => (\r\n          <SearchResult\r\n            channel={channel}\r\n            focusedId={focusedId}\r\n            key={i}\r\n            setChannel={setChannel}\r\n            type='user'\r\n            setToggleContainer={setToggleContainer}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultsDropdown;"]},"metadata":{},"sourceType":"module"}