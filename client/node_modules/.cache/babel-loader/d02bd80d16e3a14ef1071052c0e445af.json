{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:/Users/bdgcy/Axis/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/bdgcy/Axis/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:/Users/bdgcy/Axis/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/bdgcy/Axis/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar XmlNode = require('./XmlNode');\n/**\r\nA comment within an XML document.\r\n\r\n@public\r\n*/\n\n\nvar XmlComment = /*#__PURE__*/function (_XmlNode) {\n  _inherits(XmlComment, _XmlNode);\n\n  var _super = _createSuper(XmlComment);\n\n  /**\r\n  @param {string} [content]\r\n  */\n  function XmlComment() {\n    var _this;\n\n    var content = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    _classCallCheck(this, XmlComment);\n\n    _this = _super.call(this);\n    /**\r\n    Content of this comment.\r\n      @type {string}\r\n    @public\r\n    */\n\n    _this.content = content;\n    return _this;\n  }\n\n  _createClass(XmlComment, [{\n    key: \"type\",\n    get: function get() {\n      return XmlNode.TYPE_COMMENT;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return Object.assign(XmlNode.prototype.toJSON.call(this), {\n        content: this.content\n      });\n    }\n  }]);\n\n  return XmlComment;\n}(XmlNode);\n\nmodule.exports = XmlComment;","map":{"version":3,"sources":["C:/Users/bdgcy/Axis/client/node_modules/@rgrove/parse-xml/src/lib/XmlComment.js"],"names":["XmlNode","require","XmlComment","content","TYPE_COMMENT","Object","assign","prototype","toJSON","call","module","exports"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;;;IACMC,U;;;;;AACJ;AACF;AACA;AACE,wBAA0B;AAAA;;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AACxB;AAEA;AACJ;AACA;AACA;AACA;;AAEI,UAAKA,OAAL,GAAeA,OAAf;AATwB;AAUzB;;;;SAED,eAAW;AACT,aAAOH,OAAO,CAACI,YAAf;AACD;;;WAED,kBAAS;AACP,aAAOC,MAAM,CAACC,MAAP,CAAcN,OAAO,CAACO,SAAR,CAAkBC,MAAlB,CAAyBC,IAAzB,CAA8B,IAA9B,CAAd,EAAmD;AACxDN,QAAAA,OAAO,EAAE,KAAKA;AAD0C,OAAnD,CAAP;AAGD;;;;EAxBsBH,O;;AA2BzBU,MAAM,CAACC,OAAP,GAAiBT,UAAjB","sourcesContent":["'use strict';\r\n\r\nconst XmlNode = require('./XmlNode');\r\n\r\n/**\r\nA comment within an XML document.\r\n\r\n@public\r\n*/\r\nclass XmlComment extends XmlNode {\r\n  /**\r\n  @param {string} [content]\r\n  */\r\n  constructor(content = '') {\r\n    super();\r\n\r\n    /**\r\n    Content of this comment.\r\n\r\n    @type {string}\r\n    @public\r\n    */\r\n    this.content = content;\r\n  }\r\n\r\n  get type() {\r\n    return XmlNode.TYPE_COMMENT;\r\n  }\r\n\r\n  toJSON() {\r\n    return Object.assign(XmlNode.prototype.toJSON.call(this), {\r\n      content: this.content\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = XmlComment;\r\n"]},"metadata":{},"sourceType":"script"}