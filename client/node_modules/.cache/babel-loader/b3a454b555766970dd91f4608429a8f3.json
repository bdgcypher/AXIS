{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/bdgcy/Axis/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/bdgcy/Axis/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/bdgcy/Axis/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{React,useState,useEffect}from'react';import{useChatContext}from'stream-chat-react';import{FaSearch}from'react-icons/fa';import ResultsDropdown from'./ResultsDropdown';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChannelSearch=function ChannelSearch(_ref){var setToggleContainer=_ref.setToggleContainer;var _useChatContext=useChatContext(),client=_useChatContext.client,setActiveChannel=_useChatContext.setActiveChannel;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),teamChannels=_useState6[0],setTeamChannels=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),directChannels=_useState8[0],setDirectChannels=_useState8[1];useEffect(function(){if(!query){setTeamChannels([]);setDirectChannels([]);}},[query]);var getChannels=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(text){var channelResponse,userResponse,_yield$Promise$all,_yield$Promise$all2,channels,users;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;channelResponse=client.queryChannels({type:'team',name:{$autocomplete:text},members:{$in:[client.userID]}});userResponse=client.queryUsers({id:{$ne:client.userID},name:{$autocomplete:text}});_context.next=5;return Promise.all([channelResponse,userResponse]);case 5:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);channels=_yield$Promise$all2[0];users=_yield$Promise$all2[1].users;if(channels.length)setTeamChannels(channels);if(users.length)setDirectChannels(users);_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](0);setQuery('');case 16:case\"end\":return _context.stop();}}},_callee,null,[[0,13]]);}));return function getChannels(_x){return _ref2.apply(this,arguments);};}();var onSearch=function onSearch(event){event.preventDefault();setLoading(true);setQuery(event.target.value);getChannels(event.target.value);};var setChannel=function setChannel(channel){setQuery('');setActiveChannel(channel);};return/*#__PURE__*/_jsxs(\"div\",{className:\"channel-search__container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"channel-search__input__wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"channel-serach__input__icon\",children:/*#__PURE__*/_jsx(FaSearch,{})}),/*#__PURE__*/_jsx(\"input\",{className:\"channel-search__input__text\",placeholder:\"Search\",type:\"text\",value:query,onChange:onSearch})]}),query&&/*#__PURE__*/_jsx(ResultsDropdown,{teamChannels:teamChannels,directChannels:directChannels,loading:loading,setChannel:setChannel,setQuery:setQuery,setToggleContainer:setToggleContainer})]});};export default ChannelSearch;","map":{"version":3,"sources":["C:/Users/bdgcy/Axis/client/src/components/ChannelSearch.js"],"names":["React","useState","useEffect","useChatContext","FaSearch","ResultsDropdown","ChannelSearch","setToggleContainer","client","setActiveChannel","query","setQuery","loading","setLoading","teamChannels","setTeamChannels","directChannels","setDirectChannels","getChannels","text","channelResponse","queryChannels","type","name","$autocomplete","members","$in","userID","userResponse","queryUsers","id","$ne","Promise","all","channels","users","length","onSearch","event","preventDefault","target","value","setChannel","channel"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from 'react'\r\nimport { useChatContext } from 'stream-chat-react'\r\nimport { FaSearch } from 'react-icons/fa'\r\n\r\nimport ResultsDropdown from './ResultsDropdown'\r\n\r\nconst ChannelSearch = ({ setToggleContainer }) => {\r\n    const { client, setActiveChannel } = useChatContext();\r\n    const [query, setQuery] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [teamChannels, setTeamChannels] = useState([])\r\n    const [directChannels, setDirectChannels] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(!query) {\r\n            setTeamChannels([]);\r\n            setDirectChannels([]);\r\n        }\r\n    }, [query])\r\n\r\n    const getChannels = async (text) => {\r\n        try {\r\n            const channelResponse = client.queryChannels({\r\n                type: 'team', \r\n                name: { $autocomplete: text }, \r\n                members: { $in: [client.userID]}\r\n            });\r\n            const userResponse = client.queryUsers({\r\n                id: { $ne: client.userID },\r\n                name: { $autocomplete: text },\r\n            })\r\n\r\n            const [channels, { users }] = await Promise.all([channelResponse, userResponse]);\r\n\r\n            if(channels.length) setTeamChannels(channels);\r\n            if(users.length) setDirectChannels(users);\r\n        } catch (error) {\r\n            setQuery('')\r\n        }\r\n    }\r\n\r\n    const onSearch = (event) => {\r\n        event.preventDefault();\r\n\r\n        setLoading(true);\r\n        setQuery(event.target.value);\r\n        getChannels(event.target.value)\r\n    }\r\n\r\n    const setChannel = (channel) => {\r\n        setQuery('');\r\n        setActiveChannel(channel);\r\n    }\r\n\r\n    return (\r\n        <div className=\"channel-search__container\">\r\n            <div className=\"channel-search__input__wrapper\">\r\n                <div className=\"channel-serach__input__icon\">\r\n                    <FaSearch />\r\n                </div>\r\n                <input \r\n                    className=\"channel-search__input__text\" \r\n                    placeholder=\"Search\" \r\n                    type=\"text\" \r\n                    value={query}  \r\n                    onChange={onSearch}\r\n                />\r\n            </div>\r\n            { query && (\r\n                <ResultsDropdown \r\n                    teamChannels={teamChannels}\r\n                    directChannels={directChannels}\r\n                    loading={loading}\r\n                    setChannel={setChannel}\r\n                    setQuery={setQuery}\r\n                    setToggleContainer={setToggleContainer}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChannelSearch"]},"metadata":{},"sourceType":"module"}