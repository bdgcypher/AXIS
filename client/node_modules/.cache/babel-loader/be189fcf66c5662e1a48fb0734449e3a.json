{"ast":null,"code":"'use strict'; // -- Exported Constants -------------------------------------------------------\n\n/**\r\nMapping of predefined entity names to their replacement values.\r\n\r\n@type {Readonly<{[name: string]: string}>}\r\n@see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent\r\n*/\n\nvar predefinedEntities = Object.freeze(Object.assign(Object.create(null), {\n  amp: '&',\n  apos: \"'\",\n  gt: '>',\n  lt: '<',\n  quot: '\"'\n}));\nexports.predefinedEntities = predefinedEntities; // -- Exported Functions -------------------------------------------------------\n\n/**\r\nReturns `true` if _char_ is an XML `NameChar`, `false` if it isn't.\r\n\r\n@param {string} char\r\n@returns {boolean}\r\n@see https://www.w3.org/TR/2008/REC-xml-20081126/#NT-NameChar\r\n*/\n\nfunction isNameChar(char) {\n  if (isNameStartChar(char)) {\n    return true;\n  }\n\n  var cp = getCodePoint(char);\n  return cp === 0x2D // -\n  || cp === 0x2E // .\n  || cp >= 0x30 && cp <= 0x39 // 0-9\n  || cp === 0xB7 || cp >= 0x300 && cp <= 0x36F || cp >= 0x203F && cp <= 0x2040;\n}\n\nexports.isNameChar = isNameChar;\n/**\r\nReturns `true` if _char_ is an XML `NameStartChar`, `false` if it isn't.\r\n\r\n@param {string} char\r\n@returns {boolean}\r\n@see https://www.w3.org/TR/2008/REC-xml-20081126/#NT-NameStartChar\r\n*/\n\nfunction isNameStartChar(char) {\n  var cp = getCodePoint(char);\n  return cp === 0x3A // :\n  || cp === 0x5F // _\n  || cp >= 0x41 && cp <= 0x5A // A-Z\n  || cp >= 0x61 && cp <= 0x7A // a-z\n  || cp >= 0xC0 && cp <= 0xD6 || cp >= 0xD8 && cp <= 0xF6 || cp >= 0xF8 && cp <= 0x2FF || cp >= 0x370 && cp <= 0x37D || cp >= 0x37F && cp <= 0x1FFF || cp >= 0x200C && cp <= 0x200D || cp >= 0x2070 && cp <= 0x218F || cp >= 0x2C00 && cp <= 0x2FEF || cp >= 0x3001 && cp <= 0xD7FF || cp >= 0xF900 && cp <= 0xFDCF || cp >= 0xFDF0 && cp <= 0xFFFD || cp >= 0x10000 && cp <= 0xEFFFF;\n}\n\nexports.isNameStartChar = isNameStartChar;\n/**\r\nReturns `true` if _char_ is not a valid XML `Char`, `false` otherwise.\r\n\r\n@param {string} char\r\n@returns {boolean}\r\n@see https://www.w3.org/TR/2008/REC-xml-20081126/#NT-Char\r\n*/\n\nfunction isNotXmlChar(char) {\n  return !isXmlChar(char);\n}\n\nexports.isNotXmlChar = isNotXmlChar;\n/**\r\nReturns `true` if _char_ is a valid reference character (which may appear\r\nbetween `&` and `;` in a reference), `false` otherwise.\r\n\r\n@param {string} char\r\n@returns {boolean}\r\n@see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-references\r\n*/\n\nfunction isReferenceChar(char) {\n  return char === '#' || isNameChar(char);\n}\n\nexports.isReferenceChar = isReferenceChar;\n/**\r\nReturns `true` if _char_ is an XML whitespace character, `false` otherwise.\r\n\r\n@param {string} char\r\n@returns {boolean}\r\n@see https://www.w3.org/TR/2008/REC-xml-20081126/#white\r\n*/\n\nfunction isWhitespace(char) {\n  var cp = getCodePoint(char);\n  return cp === 0x20 || cp === 0x9 || cp === 0xA || cp === 0xD;\n}\n\nexports.isWhitespace = isWhitespace;\n/**\r\nReturns `true` if _char_ is a valid XML `Char`, `false` otherwise.\r\n\r\n@param {string} char\r\n@returns {boolean}\r\n@see https://www.w3.org/TR/2008/REC-xml-20081126/#NT-Char\r\n*/\n\nfunction isXmlChar(char) {\n  var cp = getCodePoint(char);\n  return cp === 0x9 || cp === 0xA || cp === 0xD || cp >= 0x20 && cp <= 0xD7FF || cp >= 0xE000 && cp <= 0xFFFD || cp >= 0x10000 && cp <= 0x10FFFF;\n}\n\nexports.isXmlChar = isXmlChar; // -- Private Functions --------------------------------------------------------\n\n/**\r\nReturns the Unicode code point value of the given character, or `-1` if _char_\r\nis empty.\r\n\r\n@param {string} char\r\n@returns {number}\r\n*/\n\nfunction getCodePoint(char) {\n  return char.codePointAt(0) || -1;\n}","map":{"version":3,"sources":["C:/Users/bdgcy/Axis/client/node_modules/@rgrove/parse-xml/src/lib/syntax.js"],"names":["predefinedEntities","Object","freeze","assign","create","amp","apos","gt","lt","quot","exports","isNameChar","char","isNameStartChar","cp","getCodePoint","isNotXmlChar","isXmlChar","isReferenceChar","isWhitespace","codePointAt"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\n// -- Exported Constants -------------------------------------------------------\r\n\r\n/**\r\nMapping of predefined entity names to their replacement values.\r\n\r\n@type {Readonly<{[name: string]: string}>}\r\n@see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent\r\n*/\r\nconst predefinedEntities = Object.freeze(Object.assign(Object.create(null), {\r\n  amp: '&',\r\n  apos: \"'\",\r\n  gt: '>',\r\n  lt: '<',\r\n  quot: '\"'\r\n}));\r\n\r\nexports.predefinedEntities = predefinedEntities;\r\n\r\n// -- Exported Functions -------------------------------------------------------\r\n\r\n/**\r\nReturns `true` if _char_ is an XML `NameChar`, `false` if it isn't.\r\n\r\n@param {string} char\r\n@returns {boolean}\r\n@see https://www.w3.org/TR/2008/REC-xml-20081126/#NT-NameChar\r\n*/\r\nfunction isNameChar(char) {\r\n  if (isNameStartChar(char)) {\r\n    return true;\r\n  }\r\n\r\n  let cp = getCodePoint(char);\r\n\r\n  return cp === 0x2D // -\r\n    || cp === 0x2E // .\r\n    || (cp >= 0x30 && cp <= 0x39) // 0-9\r\n    || cp === 0xB7\r\n    || (cp >= 0x300 && cp <= 0x36F)\r\n    || (cp >= 0x203F && cp <= 0x2040);\r\n}\r\n\r\nexports.isNameChar = isNameChar;\r\n\r\n/**\r\nReturns `true` if _char_ is an XML `NameStartChar`, `false` if it isn't.\r\n\r\n@param {string} char\r\n@returns {boolean}\r\n@see https://www.w3.org/TR/2008/REC-xml-20081126/#NT-NameStartChar\r\n*/\r\nfunction isNameStartChar(char) {\r\n  let cp = getCodePoint(char);\r\n\r\n  return cp === 0x3A // :\r\n    || cp === 0x5F // _\r\n    || (cp >= 0x41 && cp <= 0x5A) // A-Z\r\n    || (cp >= 0x61 && cp <= 0x7A) // a-z\r\n    || (cp >= 0xC0 && cp <= 0xD6)\r\n    || (cp >= 0xD8 && cp <= 0xF6)\r\n    || (cp >= 0xF8 && cp <= 0x2FF)\r\n    || (cp >= 0x370 && cp <= 0x37D)\r\n    || (cp >= 0x37F && cp <= 0x1FFF)\r\n    || (cp >= 0x200C && cp <= 0x200D)\r\n    || (cp >= 0x2070 && cp <= 0x218F)\r\n    || (cp >= 0x2C00 && cp <= 0x2FEF)\r\n    || (cp >= 0x3001 && cp <= 0xD7FF)\r\n    || (cp >= 0xF900 && cp <= 0xFDCF)\r\n    || (cp >= 0xFDF0 && cp <= 0xFFFD)\r\n    || (cp >= 0x10000 && cp <= 0xEFFFF);\r\n}\r\n\r\nexports.isNameStartChar = isNameStartChar;\r\n\r\n/**\r\nReturns `true` if _char_ is not a valid XML `Char`, `false` otherwise.\r\n\r\n@param {string} char\r\n@returns {boolean}\r\n@see https://www.w3.org/TR/2008/REC-xml-20081126/#NT-Char\r\n*/\r\nfunction isNotXmlChar(char) {\r\n  return !isXmlChar(char);\r\n}\r\n\r\nexports.isNotXmlChar = isNotXmlChar;\r\n\r\n/**\r\nReturns `true` if _char_ is a valid reference character (which may appear\r\nbetween `&` and `;` in a reference), `false` otherwise.\r\n\r\n@param {string} char\r\n@returns {boolean}\r\n@see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-references\r\n*/\r\nfunction isReferenceChar(char) {\r\n  return char === '#' || isNameChar(char);\r\n}\r\n\r\nexports.isReferenceChar = isReferenceChar;\r\n\r\n/**\r\nReturns `true` if _char_ is an XML whitespace character, `false` otherwise.\r\n\r\n@param {string} char\r\n@returns {boolean}\r\n@see https://www.w3.org/TR/2008/REC-xml-20081126/#white\r\n*/\r\nfunction isWhitespace(char) {\r\n  let cp = getCodePoint(char);\r\n\r\n  return cp === 0x20\r\n    || cp === 0x9\r\n    || cp === 0xA\r\n    || cp === 0xD;\r\n}\r\n\r\nexports.isWhitespace = isWhitespace;\r\n\r\n/**\r\nReturns `true` if _char_ is a valid XML `Char`, `false` otherwise.\r\n\r\n@param {string} char\r\n@returns {boolean}\r\n@see https://www.w3.org/TR/2008/REC-xml-20081126/#NT-Char\r\n*/\r\nfunction isXmlChar(char) {\r\n  let cp = getCodePoint(char);\r\n\r\n  return cp === 0x9\r\n    || cp === 0xA\r\n    || cp === 0xD\r\n    || (cp >= 0x20 && cp <= 0xD7FF)\r\n    || (cp >= 0xE000 && cp <= 0xFFFD)\r\n    || (cp >= 0x10000 && cp <= 0x10FFFF);\r\n}\r\n\r\nexports.isXmlChar = isXmlChar;\r\n\r\n// -- Private Functions --------------------------------------------------------\r\n\r\n/**\r\nReturns the Unicode code point value of the given character, or `-1` if _char_\r\nis empty.\r\n\r\n@param {string} char\r\n@returns {number}\r\n*/\r\nfunction getCodePoint(char) {\r\n  return char.codePointAt(0) || -1;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}