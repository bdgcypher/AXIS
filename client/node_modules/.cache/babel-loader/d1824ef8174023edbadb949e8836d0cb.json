{"ast":null,"code":"var _isArrayLike = /*#__PURE__*/require(\"./_isArrayLike\");\n\nvar _xwrap = /*#__PURE__*/require(\"./_xwrap\");\n\nvar bind = /*#__PURE__*/require(\"../bind\");\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nfunction _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}\n\nmodule.exports = _reduce;","map":{"version":3,"sources":["C:/Users/bdgcy/Axis/client/node_modules/ramda/src/internal/_reduce.js"],"names":["_isArrayLike","require","_xwrap","bind","_arrayReduce","xf","acc","list","idx","len","length","_iterableReduce","iter","step","next","done","value","_methodReduce","obj","methodName","symIterator","Symbol","iterator","_reduce","fn","reduce","TypeError","module","exports"],"mappings":"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","sourcesContent":["var _isArrayLike =\r\n/*#__PURE__*/\r\nrequire(\"./_isArrayLike\");\r\n\r\nvar _xwrap =\r\n/*#__PURE__*/\r\nrequire(\"./_xwrap\");\r\n\r\nvar bind =\r\n/*#__PURE__*/\r\nrequire(\"../bind\");\r\n\r\nfunction _arrayReduce(xf, acc, list) {\r\n  var idx = 0;\r\n  var len = list.length;\r\n\r\n  while (idx < len) {\r\n    acc = xf['@@transducer/step'](acc, list[idx]);\r\n\r\n    if (acc && acc['@@transducer/reduced']) {\r\n      acc = acc['@@transducer/value'];\r\n      break;\r\n    }\r\n\r\n    idx += 1;\r\n  }\r\n\r\n  return xf['@@transducer/result'](acc);\r\n}\r\n\r\nfunction _iterableReduce(xf, acc, iter) {\r\n  var step = iter.next();\r\n\r\n  while (!step.done) {\r\n    acc = xf['@@transducer/step'](acc, step.value);\r\n\r\n    if (acc && acc['@@transducer/reduced']) {\r\n      acc = acc['@@transducer/value'];\r\n      break;\r\n    }\r\n\r\n    step = iter.next();\r\n  }\r\n\r\n  return xf['@@transducer/result'](acc);\r\n}\r\n\r\nfunction _methodReduce(xf, acc, obj, methodName) {\r\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\r\n}\r\n\r\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\r\n\r\nfunction _reduce(fn, acc, list) {\r\n  if (typeof fn === 'function') {\r\n    fn = _xwrap(fn);\r\n  }\r\n\r\n  if (_isArrayLike(list)) {\r\n    return _arrayReduce(fn, acc, list);\r\n  }\r\n\r\n  if (typeof list['fantasy-land/reduce'] === 'function') {\r\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\r\n  }\r\n\r\n  if (list[symIterator] != null) {\r\n    return _iterableReduce(fn, acc, list[symIterator]());\r\n  }\r\n\r\n  if (typeof list.next === 'function') {\r\n    return _iterableReduce(fn, acc, list);\r\n  }\r\n\r\n  if (typeof list.reduce === 'function') {\r\n    return _methodReduce(fn, acc, list, 'reduce');\r\n  }\r\n\r\n  throw new TypeError('reduce: list must be array or iterable');\r\n}\r\n\r\nmodule.exports = _reduce;"]},"metadata":{},"sourceType":"script"}