{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useChatContext } from '../../../context/ChatContext';\nexport var useGiphyPreview = function (separateGiphyPreview) {\n  var _a = useState(),\n      giphyPreviewMessage = _a[0],\n      setGiphyPreviewMessage = _a[1];\n\n  var client = useChatContext('useGiphyPreview').client;\n  useEffect(function () {\n    var handleEvent = function (event) {\n      var message = event.message,\n          user = event.user;\n\n      if ((message === null || message === void 0 ? void 0 : message.command) === 'giphy' && (user === null || user === void 0 ? void 0 : user.id) === client.userID) {\n        setGiphyPreviewMessage(undefined);\n      }\n    };\n\n    if (separateGiphyPreview) client.on('message.new', handleEvent);\n    return function () {\n      return client.off('message.new', handleEvent);\n    };\n  }, [separateGiphyPreview]);\n  return {\n    giphyPreviewMessage: giphyPreviewMessage,\n    setGiphyPreviewMessage: setGiphyPreviewMessage\n  };\n};","map":{"version":3,"sources":["C:/Users/bdgcy/Axis/client/node_modules/stream-chat-react/dist/components/MessageList/hooks/useGiphyPreview.js"],"names":["useEffect","useState","useChatContext","useGiphyPreview","separateGiphyPreview","_a","giphyPreviewMessage","setGiphyPreviewMessage","client","handleEvent","event","message","user","command","id","userID","undefined","on","off"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,OAAO,IAAIC,eAAe,GAAG,UAAUC,oBAAV,EAAgC;AACzD,MAAIC,EAAE,GAAGJ,QAAQ,EAAjB;AAAA,MAAqBK,mBAAmB,GAAGD,EAAE,CAAC,CAAD,CAA7C;AAAA,MAAkDE,sBAAsB,GAAGF,EAAE,CAAC,CAAD,CAA7E;;AACA,MAAIG,MAAM,GAAGN,cAAc,CAAC,iBAAD,CAAd,CAAkCM,MAA/C;AACAR,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIS,WAAW,GAAG,UAAUC,KAAV,EAAiB;AAC/B,UAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB;AAAA,UAA6BC,IAAI,GAAGF,KAAK,CAACE,IAA1C;;AACA,UAAI,CAACD,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACE,OAA3D,MAAwE,OAAxE,IAAmF,CAACD,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACE,EAAlD,MAA0DN,MAAM,CAACO,MAAxJ,EAAgK;AAC5JR,QAAAA,sBAAsB,CAACS,SAAD,CAAtB;AACH;AACJ,KALD;;AAMA,QAAIZ,oBAAJ,EACII,MAAM,CAACS,EAAP,CAAU,aAAV,EAAyBR,WAAzB;AACJ,WAAO,YAAY;AAAE,aAAOD,MAAM,CAACU,GAAP,CAAW,aAAX,EAA0BT,WAA1B,CAAP;AAAgD,KAArE;AACH,GAVQ,EAUN,CAACL,oBAAD,CAVM,CAAT;AAWA,SAAO;AAAEE,IAAAA,mBAAmB,EAAEA,mBAAvB;AAA4CC,IAAAA,sBAAsB,EAAEA;AAApE,GAAP;AACH,CAfM","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useChatContext } from '../../../context/ChatContext';\r\nexport var useGiphyPreview = function (separateGiphyPreview) {\r\n    var _a = useState(), giphyPreviewMessage = _a[0], setGiphyPreviewMessage = _a[1];\r\n    var client = useChatContext('useGiphyPreview').client;\r\n    useEffect(function () {\r\n        var handleEvent = function (event) {\r\n            var message = event.message, user = event.user;\r\n            if ((message === null || message === void 0 ? void 0 : message.command) === 'giphy' && (user === null || user === void 0 ? void 0 : user.id) === client.userID) {\r\n                setGiphyPreviewMessage(undefined);\r\n            }\r\n        };\r\n        if (separateGiphyPreview)\r\n            client.on('message.new', handleEvent);\r\n        return function () { return client.off('message.new', handleEvent); };\r\n    }, [separateGiphyPreview]);\r\n    return { giphyPreviewMessage: giphyPreviewMessage, setGiphyPreviewMessage: setGiphyPreviewMessage };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}