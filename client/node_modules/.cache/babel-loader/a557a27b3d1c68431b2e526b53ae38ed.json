{"ast":null,"code":"var _arity = /*#__PURE__*/require(\"./internal/_arity\");\n\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2\");\n/**\r\n * Creates a function that is bound to a context.\r\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\r\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.6.0\r\n * @category Function\r\n * @category Object\r\n * @sig (* -> *) -> {*} -> (* -> *)\r\n * @param {Function} fn The function to bind to context\r\n * @param {Object} thisObj The context to bind `fn` to\r\n * @return {Function} A function that will execute in the context of `thisObj`.\r\n * @see R.partial\r\n * @example\r\n *\r\n *      const log = R.bind(console.log, console);\r\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\r\n *      // logs {a: 2}\r\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\r\n */\n\n\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\nmodule.exports = bind;","map":{"version":3,"sources":["C:/Users/bdgcy/Axis/client/node_modules/ramda/src/bind.js"],"names":["_arity","require","_curry2","bind","fn","thisObj","length","apply","arguments","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GACV,aACAC,OAAO,CAAC,mBAAD,CAFP;;AAIA,IAAIC,OAAO,GACX,aACAD,OAAO,CAAC,oBAAD,CAFP;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIE,IAAI,GACR,aACAD,OAAO,CAAC,SAASC,IAAT,CAAcC,EAAd,EAAkBC,OAAlB,EAA2B;AACjC,SAAOL,MAAM,CAACI,EAAE,CAACE,MAAJ,EAAY,YAAY;AACnC,WAAOF,EAAE,CAACG,KAAH,CAASF,OAAT,EAAkBG,SAAlB,CAAP;AACD,GAFY,CAAb;AAGD,CAJM,CAFP;;AAQAC,MAAM,CAACC,OAAP,GAAiBP,IAAjB","sourcesContent":["var _arity =\r\n/*#__PURE__*/\r\nrequire(\"./internal/_arity\");\r\n\r\nvar _curry2 =\r\n/*#__PURE__*/\r\nrequire(\"./internal/_curry2\");\r\n/**\r\n * Creates a function that is bound to a context.\r\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\r\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.6.0\r\n * @category Function\r\n * @category Object\r\n * @sig (* -> *) -> {*} -> (* -> *)\r\n * @param {Function} fn The function to bind to context\r\n * @param {Object} thisObj The context to bind `fn` to\r\n * @return {Function} A function that will execute in the context of `thisObj`.\r\n * @see R.partial\r\n * @example\r\n *\r\n *      const log = R.bind(console.log, console);\r\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\r\n *      // logs {a: 2}\r\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\r\n */\r\n\r\n\r\nvar bind =\r\n/*#__PURE__*/\r\n_curry2(function bind(fn, thisObj) {\r\n  return _arity(fn.length, function () {\r\n    return fn.apply(thisObj, arguments);\r\n  });\r\n});\r\n\r\nmodule.exports = bind;"]},"metadata":{},"sourceType":"script"}