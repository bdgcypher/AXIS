{"ast":null,"code":"import _slicedToArray from\"C:/Users/bdgcy/Axis/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"C:/Users/bdgcy/Axis/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useState}from'react';import{ChannelList,useChatContext}from'stream-chat-react';import Cookies from'universal-cookie';import AxisIcon from'../assets/AxisLogo.png';import logoutImg from'../assets/logout.png';import ChannelSearch from'./ChannelSearch';import TeamChannelList from'./TeamChannelList';import TeamChannelPreview from'./TeamChannelPreview';import LogoText from'../assets/AxisTextLogo.png';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var cookies=new Cookies();var SideBar=function SideBar(_ref){var logout=_ref.logout;return/*#__PURE__*/_jsxs(\"div\",{className:\"channel-list__sidebar\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"channel-list__sidebar__icon1\",children:/*#__PURE__*/_jsx(\"div\",{className:\"icon1__inner\",children:/*#__PURE__*/_jsx(\"img\",{src:AxisIcon,alt:\"Axis\",width:\"50\",height:\"50\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"channel-list__sidebar__icon2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"icon1__inner\",onClick:logout,children:/*#__PURE__*/_jsx(\"img\",{src:logoutImg,alt:\"Logout\",width:\"30\",height:\"30\"})})})]});};var CompanyHeader=function CompanyHeader(){return/*#__PURE__*/_jsx(\"div\",{className:\"channel-list__header\",children:/*#__PURE__*/_jsx(\"img\",{src:LogoText,alt:\"Logo\",className:\"channel-list__header__text\"})});};var customChannelTeamFilter=function customChannelTeamFilter(channels){return channels.filter(function(channel){return channel.type==='team';});};var customChannelMessagingFilter=function customChannelMessagingFilter(channels){return channels.filter(function(channel){return channel.type==='messaging';});};var ChannelListContent=function ChannelListContent(_ref2){var isCreating=_ref2.isCreating,setIsCreating=_ref2.setIsCreating,setCreateType=_ref2.setCreateType,setIsEditing=_ref2.setIsEditing,setToggleContainer=_ref2.setToggleContainer;var _useChatContext=useChatContext(),client=_useChatContext.client;var logout=function logout(){cookies.remove('token');cookies.remove('userId');cookies.remove('username');cookies.remove('fullName');cookies.remove('avatarURL');cookies.remove('hashedPassword');cookies.remove('phoneNumber');window.location.reload();};var filters={members:{$in:[client.userID]}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(SideBar,{logout:logout}),/*#__PURE__*/_jsxs(\"div\",{className:\"channel-list__list__wrapper\",children:[/*#__PURE__*/_jsx(CompanyHeader,{}),/*#__PURE__*/_jsx(ChannelSearch,{setToggleContainer:setToggleContainer}),/*#__PURE__*/_jsx(ChannelList,{filters:filters,channelRenderFilterFn:customChannelTeamFilter,List:function List(listProps){return/*#__PURE__*/_jsx(TeamChannelList,_objectSpread(_objectSpread({},listProps),{},{type:\"team\",isCreating:isCreating,setIsCreating:setIsCreating,setCreateType:setCreateType,setIsEditing:setIsEditing,setToggleContainer:setToggleContainer}));},Preview:function Preview(previewProps){return/*#__PURE__*/_jsx(TeamChannelPreview,_objectSpread(_objectSpread({},previewProps),{},{setIsCreating:setIsCreating,setIsEditing:setIsEditing,setToggleContainer:setToggleContainer,type:\"team\"}));}}),/*#__PURE__*/_jsx(ChannelList,{filters:filters,channelRenderFilterFn:customChannelMessagingFilter,List:function List(listProps){return/*#__PURE__*/_jsx(TeamChannelList,_objectSpread(_objectSpread({},listProps),{},{type:\"messaging\",isCreating:isCreating,setIsCreating:setIsCreating,setCreateType:setCreateType,setIsEditing:setIsEditing,setToggleContainer:setToggleContainer}));},Preview:function Preview(previewProps){return/*#__PURE__*/_jsx(TeamChannelPreview,_objectSpread(_objectSpread({},previewProps),{},{setIsCreating:setIsCreating,setIsEditing:setIsEditing,setToggleContainer:setToggleContainer,type:\"messaging\"}));}})]})]});};var ChannelListContainer=function ChannelListContainer(_ref3){var setCreateType=_ref3.setCreateType,setIsCreating=_ref3.setIsCreating,setIsEditing=_ref3.setIsEditing;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),toggleContainer=_useState2[0],setToggleContainer=_useState2[1];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"channel-list__container\",children:/*#__PURE__*/_jsx(ChannelListContent,{setIsCreating:setIsCreating,setCreateType:setCreateType,setIsEditing:setIsEditing})}),/*#__PURE__*/_jsxs(\"div\",{className:\"channel-list__container-responsive\",style:{left:toggleContainer?\"0%\":\"-89%\",backgroundColor:\"#FA2D48\"},children:[/*#__PURE__*/_jsx(ChannelListContent,{setIsCreating:setIsCreating,setCreateType:setCreateType,setIsEditing:setIsEditing,setToggleContainer:setToggleContainer}),/*#__PURE__*/_jsx(\"div\",{className:\"channel-list__container-toggle\",onClick:function onClick(){return setToggleContainer(function(prevToggleContainer){return!prevToggleContainer;});},children:/*#__PURE__*/_jsx(\"div\",{className:\"channel-list__container-toggle-button\"})})]})]});};export default ChannelListContainer;","map":{"version":3,"sources":["C:/Users/bdgcy/Axis/client/src/components/ChannelListContainer.js"],"names":["React","useState","ChannelList","useChatContext","Cookies","AxisIcon","logoutImg","ChannelSearch","TeamChannelList","TeamChannelPreview","LogoText","cookies","SideBar","logout","CompanyHeader","customChannelTeamFilter","channels","filter","channel","type","customChannelMessagingFilter","ChannelListContent","isCreating","setIsCreating","setCreateType","setIsEditing","setToggleContainer","client","remove","window","location","reload","filters","members","$in","userID","listProps","previewProps","ChannelListContainer","toggleContainer","left","backgroundColor","prevToggleContainer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { ChannelList, useChatContext } from 'stream-chat-react'\r\nimport Cookies from 'universal-cookie'\r\n\r\nimport AxisIcon from '../assets/AxisLogo.png'\r\nimport logoutImg from '../assets/logout.png'\r\nimport ChannelSearch from './ChannelSearch'\r\nimport TeamChannelList from './TeamChannelList'\r\nimport TeamChannelPreview from './TeamChannelPreview'\r\nimport LogoText from '../assets/AxisTextLogo.png'\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst SideBar = ({ logout }) => (\r\n\r\n    <div className=\"channel-list__sidebar\">\r\n        <div className=\"channel-list__sidebar__icon1\">\r\n            <div className=\"icon1__inner\">\r\n                <img src={AxisIcon} alt=\"Axis\" width=\"50\" height=\"50\" />\r\n            </div>\r\n        </div>\r\n        <div className=\"channel-list__sidebar__icon2\">\r\n            <div className=\"icon1__inner\" onClick={logout}>\r\n                <img src={logoutImg} alt=\"Logout\" width=\"30\" height=\"30\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst CompanyHeader = () => (\r\n    <div className=\"channel-list__header\">\r\n        <img src={LogoText} alt=\"Logo\" className=\"channel-list__header__text\" />\r\n    </div>\r\n)\r\n\r\nconst customChannelTeamFilter = (channels) => {\r\n    return channels.filter((channel) => channel.type === 'team');\r\n}\r\n\r\nconst customChannelMessagingFilter = (channels) => {\r\n    return channels.filter((channel) => channel.type === 'messaging');\r\n}\r\n\r\nconst ChannelListContent = ({ isCreating, setIsCreating, setCreateType, setIsEditing, setToggleContainer }) => {\r\n    const { client } = useChatContext();\r\n\r\n    const logout = () => {\r\n        cookies.remove('token');\r\n        cookies.remove('userId');\r\n        cookies.remove('username');\r\n        cookies.remove('fullName');\r\n        cookies.remove('avatarURL');\r\n        cookies.remove('hashedPassword');\r\n        cookies.remove('phoneNumber');\r\n\r\n        window.location.reload();\r\n    }\r\n\r\n    const filters = { members: { $in: [client.userID] } };\r\n\r\n    return (\r\n        <>\r\n           <SideBar logout={logout} />\r\n           <div className=\"channel-list__list__wrapper\">\r\n               <CompanyHeader />\r\n               <ChannelSearch setToggleContainer={setToggleContainer} />\r\n               <ChannelList \r\n                    filters={filters}\r\n                    channelRenderFilterFn={customChannelTeamFilter}\r\n                    List={(listProps) => (\r\n                        <TeamChannelList\r\n                            {...listProps}\r\n                            type=\"team\"\r\n                            isCreating = {isCreating}\r\n                            setIsCreating = {setIsCreating}\r\n                            setCreateType = {setCreateType}\r\n                            setIsEditing = {setIsEditing}\r\n                            setToggleContainer={setToggleContainer}\r\n                        />\r\n                    )}\r\n                    Preview={(previewProps) => (\r\n                        <TeamChannelPreview \r\n                            {...previewProps}\r\n                            setIsCreating={setIsCreating}\r\n                            setIsEditing={setIsEditing}\r\n                            setToggleContainer={setToggleContainer}\r\n                            type=\"team\"\r\n                        />\r\n                    )}\r\n               />\r\n               <ChannelList \r\n                    filters={filters}\r\n                    channelRenderFilterFn={customChannelMessagingFilter}\r\n                    List={(listProps) => (\r\n                        <TeamChannelList\r\n                            {...listProps}\r\n                            type=\"messaging\"\r\n                            isCreating = {isCreating}\r\n                            setIsCreating = {setIsCreating}\r\n                            setCreateType = {setCreateType}\r\n                            setIsEditing = {setIsEditing}\r\n                            setToggleContainer={setToggleContainer}\r\n                        />\r\n                    )}\r\n                    Preview={(previewProps) => (\r\n                        <TeamChannelPreview \r\n                            {...previewProps}\r\n                            setIsCreating={setIsCreating}\r\n                            setIsEditing={setIsEditing}\r\n                            setToggleContainer={setToggleContainer}\r\n                            type=\"messaging\"\r\n                        />\r\n                    )}\r\n               />\r\n           </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst ChannelListContainer = ({ setCreateType, setIsCreating, setIsEditing }) => {\r\n    const [toggleContainer, setToggleContainer] = useState(true);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"channel-list__container\">\r\n              <ChannelListContent \r\n                setIsCreating={setIsCreating} \r\n                setCreateType={setCreateType} \r\n                setIsEditing={setIsEditing}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"channel-list__container-responsive\"\r\n                style={{ left: toggleContainer ? \"0%\" : \"-89%\", backgroundColor: \"#FA2D48\"}}\r\n            >\r\n                <ChannelListContent \r\n                    setIsCreating={setIsCreating} \r\n                    setCreateType={setCreateType} \r\n                    setIsEditing={setIsEditing}\r\n                    setToggleContainer={setToggleContainer}\r\n                />\r\n                <div className=\"channel-list__container-toggle\" onClick={() => setToggleContainer((prevToggleContainer) => !prevToggleContainer)}>\r\n                    <div className=\"channel-list__container-toggle-button\" />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ChannelListContainer\r\n"]},"metadata":{},"sourceType":"module"}