[{"C:\\Users\\bdgcy\\Axis\\client\\src\\index.js":"1","C:\\Users\\bdgcy\\Axis\\client\\src\\App.js":"2","C:\\Users\\bdgcy\\Axis\\client\\src\\components\\Auth.js":"3","C:\\Users\\bdgcy\\Axis\\client\\src\\components\\ChannelListContainer.js":"4","C:\\Users\\bdgcy\\Axis\\client\\src\\components\\ChannelContainer.js":"5","C:\\Users\\bdgcy\\Axis\\client\\src\\components\\TeamChannelPreview.js":"6","C:\\Users\\bdgcy\\Axis\\client\\src\\components\\ChannelInner.js":"7","C:\\Users\\bdgcy\\Axis\\client\\src\\components\\TeamChannelList.js":"8","C:\\Users\\bdgcy\\Axis\\client\\src\\components\\ChannelSearch.js":"9","C:\\Users\\bdgcy\\Axis\\client\\src\\components\\EditChannel.js":"10","C:\\Users\\bdgcy\\Axis\\client\\src\\components\\CreateChannel.js":"11","C:\\Users\\bdgcy\\Axis\\client\\src\\components\\TeamMessage.js":"12","C:\\Users\\bdgcy\\Axis\\client\\src\\assets\\ChannelInfo.js":"13","C:\\Users\\bdgcy\\Axis\\client\\src\\components\\UserList.js":"14","C:\\Users\\bdgcy\\Axis\\client\\src\\components\\ResultsDropdown.js":"15","C:\\Users\\bdgcy\\Axis\\client\\src\\assets\\AddChannel.js":"16","C:\\Users\\bdgcy\\Axis\\client\\src\\assets\\CloseCreateChannel.js":"17","C:\\Users\\bdgcy\\Axis\\client\\src\\assets\\InviteIcon.js":"18"},{"size":153,"mtime":1636340317740,"results":"19","hashOfConfig":"20"},{"size":1861,"mtime":1636340317732,"results":"21","hashOfConfig":"20"},{"size":4616,"mtime":1636341863627,"results":"22","hashOfConfig":"20"},{"size":5735,"mtime":1636340317737,"results":"23","hashOfConfig":"20"},{"size":1530,"mtime":1636340317736,"results":"24","hashOfConfig":"20"},{"size":1610,"mtime":1636340317739,"results":"25","hashOfConfig":"20"},{"size":3193,"mtime":1636340317736,"results":"26","hashOfConfig":"20"},{"size":1586,"mtime":1636340317738,"results":"27","hashOfConfig":"20"},{"size":2660,"mtime":1636340317737,"results":"28","hashOfConfig":"20"},{"size":1985,"mtime":1636340317738,"results":"29","hashOfConfig":"20"},{"size":2185,"mtime":1636340317737,"results":"30","hashOfConfig":"20"},{"size":363,"mtime":1636340317739,"results":"31","hashOfConfig":"20"},{"size":766,"mtime":1636340317734,"results":"32","hashOfConfig":"20"},{"size":3203,"mtime":1636340317739,"results":"33","hashOfConfig":"20"},{"size":3563,"mtime":1636340317738,"results":"34","hashOfConfig":"20"},{"size":723,"mtime":1636340317733,"results":"35","hashOfConfig":"20"},{"size":844,"mtime":1636340317734,"results":"36","hashOfConfig":"20"},{"size":1103,"mtime":1636340317734,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1epmpo",{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\bdgcy\\Axis\\client\\src\\index.js",[],"C:\\Users\\bdgcy\\Axis\\client\\src\\App.js",[],"C:\\Users\\bdgcy\\Axis\\client\\src\\components\\Auth.js",[],"C:\\Users\\bdgcy\\Axis\\client\\src\\components\\ChannelListContainer.js",[],"C:\\Users\\bdgcy\\Axis\\client\\src\\components\\ChannelContainer.js",["77","78"],"import React from 'react'\r\nimport { Channel, useChatContext, MessageTeam } from 'stream-chat-react'\r\n\r\nimport ChannelInner from './ChannelInner'\r\nimport CreateChannel from './CreateChannel'\r\nimport EditChannel from './EditChannel'\r\nimport TeamMessage from './TeamMessage'\r\n\r\nconst ChannelContainer = ({ isCreating, setIsCreating, isEditing, setIsEditing, createType, }) => {\r\n    const { channel } = useChatContext();\r\n\r\n    if(isCreating) {\r\n        return (\r\n            <div className=\"channel__container\">\r\n                <CreateChannel createType={createType} setIsCreating={setIsCreating}/>\r\n            </div>\r\n        );\r\n    } \r\n\r\n    if(isEditing) {\r\n        return (\r\n            <div className=\"channel__container\">\r\n                <EditChannel setIsEditing={setIsEditing}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const EmptyState = () => (\r\n        <div className=\"channel-empty__container\">\r\n            <p className=\"channel-empty__first\">This is the beginning of your chat history.</p>\r\n            <p className=\"channel-empty__second\">Send messages, attachments, links, emojis, and more!</p>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"channel__container\">\r\n            <Channel\r\n                EmptyStateIndicator={EmptyState}\r\n                Message={(messageProps, i) => <MessageTeam key={i} { ...messageProps} />}\r\n            >\r\n                <ChannelInner setIsEditing={setIsEditing} />\r\n            </Channel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChannelContainer\r\n","C:\\Users\\bdgcy\\Axis\\client\\src\\components\\TeamChannelPreview.js",[],"C:\\Users\\bdgcy\\Axis\\client\\src\\components\\ChannelInner.js",[],"C:\\Users\\bdgcy\\Axis\\client\\src\\components\\TeamChannelList.js",[],"C:\\Users\\bdgcy\\Axis\\client\\src\\components\\ChannelSearch.js",[],"C:\\Users\\bdgcy\\Axis\\client\\src\\components\\EditChannel.js",[],"C:\\Users\\bdgcy\\Axis\\client\\src\\components\\CreateChannel.js",[],"C:\\Users\\bdgcy\\Axis\\client\\src\\components\\TeamMessage.js",["79"],"import React from 'react';\r\nimport { MessageTeam, useMessageContext } from 'stream-chat-react';\r\n\r\nconst TeamMessage = () => {\r\n    const { handleOpenThread, message } = useMessageContext();\r\n\r\n    return (\r\n        <MessageTeam\r\n            message={{ ...message, user: {}}}\r\n            // handleOpenThread={}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TeamMessage","C:\\Users\\bdgcy\\Axis\\client\\src\\assets\\ChannelInfo.js",[],"C:\\Users\\bdgcy\\Axis\\client\\src\\components\\UserList.js",["80"],"import React, { useEffect, useState } from 'react';\r\nimport { Avatar, useChatContext } from 'stream-chat-react';\r\n\r\nimport { InviteIcon } from '../assets/InviteIcon';\r\n\r\nconst ListContainer = ({ children }) => {\r\n    return (\r\n        <div className=\"user-list__container\">\r\n            <div className=\"user-list__header\">\r\n                <p>User</p>\r\n                <p>Invite</p>\r\n            </div>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst UserItem = ({ user, setSelectedUsers }) => {\r\n    const [selected, setSelected] = useState(false)\r\n\r\n    const handleSelect = () => {\r\n        if(selected) {\r\n            setSelectedUsers((prevUsers) => prevUsers.filter((prevUser) => prevUser !== user.id))\r\n        } else {\r\n            setSelectedUsers((prevUsers) => [...prevUsers, user.id])\r\n        }\r\n\r\n        setSelected((prevSelected) => !prevSelected)\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-item__wrapper\" onClick={handleSelect}>\r\n            <div className=\"user-item__name-wrapper\">\r\n                <Avatar image={user.image} name={user.id} size={32} />\r\n                <p className=\"user-item__name\">{user.name || user.id}</p>\r\n            </div>\r\n            {selected ? <InviteIcon /> : <div className=\"user-item__invite-empty\" />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst UserList = ({ setSelectedUsers }) => {\r\n    const { client } = useChatContext();\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [listEmpty, setListEmpty] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const getUsers = async () => {\r\n            if(loading) return;\r\n\r\n            setLoading(true);\r\n            \r\n            try {\r\n                const response = await client.queryUsers(\r\n                    { id: { $ne: client.userID } },\r\n                    { id: 1 },\r\n                    { limit: 8 } \r\n                );\r\n\r\n                if(response.users.length) {\r\n                    setUsers(response.users);\r\n                } else {\r\n                    setListEmpty(true);\r\n                }\r\n            } catch (error) {\r\n               setError(true);\r\n            }\r\n            setLoading(false);\r\n        }\r\n\r\n        if(client) getUsers()\r\n    }, []);\r\n\r\n    if(error) {\r\n        return (\r\n            <ListContainer>\r\n                <div className=\"user-list__message\">\r\n                    Error loading, please refresh and try again.\r\n                </div>\r\n            </ListContainer>\r\n        )\r\n    }\r\n\r\n    if(listEmpty) {\r\n        return (\r\n            <ListContainer>\r\n                <div className=\"user-list__message\">\r\n                    No users found.\r\n                </div>\r\n            </ListContainer>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ListContainer>\r\n            {loading ? <div className=\"user-list__message\">\r\n                Loading users...\r\n            </div> : (\r\n                users?.map((user, i) => (\r\n                  <UserItem index={i} key={user.id} user={user} setSelectedUsers={setSelectedUsers} />  \r\n                ))\r\n            )}\r\n        </ListContainer>\r\n    )\r\n}\r\n\r\nexport default UserList;","C:\\Users\\bdgcy\\Axis\\client\\src\\components\\ResultsDropdown.js",[],"C:\\Users\\bdgcy\\Axis\\client\\src\\assets\\AddChannel.js",[],"C:\\Users\\bdgcy\\Axis\\client\\src\\assets\\CloseCreateChannel.js",[],"C:\\Users\\bdgcy\\Axis\\client\\src\\assets\\InviteIcon.js",[],{"ruleId":"81","severity":1,"message":"82","line":7,"column":8,"nodeType":"83","messageId":"84","endLine":7,"endColumn":19},{"ruleId":"81","severity":1,"message":"85","line":10,"column":13,"nodeType":"83","messageId":"84","endLine":10,"endColumn":20},{"ruleId":"81","severity":1,"message":"86","line":5,"column":13,"nodeType":"83","messageId":"84","endLine":5,"endColumn":29},{"ruleId":"87","severity":1,"message":"88","line":75,"column":8,"nodeType":"89","endLine":75,"endColumn":10,"suggestions":"90"},"no-unused-vars","'TeamMessage' is defined but never used.","Identifier","unusedVar","'channel' is assigned a value but never used.","'handleOpenThread' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'client' and 'loading'. Either include them or remove the dependency array.","ArrayExpression",["91"],{"desc":"92","fix":"93"},"Update the dependencies array to be: [client, loading]",{"range":"94","text":"95"},[2299,2301],"[client, loading]"]